import React, { useState } from 'react';
import { 
  Leaf, 
  Camera, 
  TrendingUp, 
  FileText, 
  Mic, 
  Shield, 
  Users, 
  Award,
  ChevronRight,
  Play,
  Star,
  Globe,
  Smartphone,
  Brain,
  Cloud,
  Sprout,
  Lightbulb,
  BarChart3
} from 'lucide-react';

interface LandingPageProps {
  onLaunchApp: () => void;
}

const LandingPage: React.FC<LandingPageProps> = ({ onLaunchApp }) => {
  const [selectedLanguage, setSelectedLanguage] = useState('en');

  const languages = [
    { code: 'en', name: 'English', flag: 'ЁЯЗмЁЯЗз' },
    { code: 'hi', name: 'рд╣рд┐рдВрджреА', flag: 'ЁЯЗоЁЯЗ│' },
    { code: 'mr', name: 'рдорд░рд╛рдареА', flag: 'ЁЯЗоЁЯЗ│' },
    { code: 'gu', name: 'ркЧрлБркЬрк░рк╛ркдрлА', flag: 'ЁЯЗоЁЯЗ│' },
    { code: 'pa', name: 'рикрй░риЬри╛римрйА', flag: 'ЁЯЗоЁЯЗ│' }
  ];

  const getLocalizedText = (key: string) => {
    const texts: { [key: string]: { [lang: string]: string } } = {
      heroTitle: {
        en: 'Your AI-Powered Farming Assistant',
        hi: 'рдЖрдкрдХрд╛ AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдХреГрд╖рд┐ рд╕рд╣рд╛рдпрдХ',
        mr: 'рддреБрдордЪрд╛ AI-рдЪрд╛рд▓рд┐рдд рдХреГрд╖реА рд╕рд╣рд╛рдпрдХ',
        gu: 'ркдркорк╛рк░рлЛ AI-рк╕ркВркЪрк╛рк▓рк┐ркд ркХрлГрк╖рк┐ рк╕рк╣рк╛ркпркХ',
        pa: 'ридрйБри╣ри╛рибри╛ AI-ри╕рй░риЪри╛ри▓ри┐рид риЦрйЗридрйА ри╕ри╣ри╛риЗриХ'
      },
      heroSubtitle: {
        en: 'Revolutionizing Indian agriculture with intelligent crop diagnosis, real-time market prices, and personalized farming guidance',
        hi: 'рдмреБрджреНрдзрд┐рдорд╛рди рдлрд╕рд▓ рдирд┐рджрд╛рди, рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рдмрд╛рдЬрд╛рд░ рдореВрд▓реНрдп, рдФрд░ рд╡реНрдпрдХреНрддрд┐рдЧрдд рдХреГрд╖рд┐ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдХреЗ рд╕рд╛рде рднрд╛рд░рддреАрдп рдХреГрд╖рд┐ рдореЗрдВ рдХреНрд░рд╛рдВрддрд┐',
        mr: 'рдмреБрджреНрдзрд┐рдорд╛рди рдкреАрдХ рдирд┐рджрд╛рди, рд░рд┐рдЕрд▓-рдЯрд╛рдЗрдо рдмрд╛рдЬрд╛рд░ рдХрд┐рдВрдорддреА рдЖрдгрд┐ рд╡реИрдпрдХреНрддрд┐рдХ рд╢реЗрддреА рдорд╛рд░реНрдЧрджрд░реНрд╢рдирд╛рд╕рд╣ рднрд╛рд░рддреАрдп рд╢реЗрддреАрдордзреНрдпреЗ рдХреНрд░рд╛рдВрддреА',
        gu: 'ркмрлБркжрлНркзрк┐рк╢рк╛рк│рлА рккрк╛ркХ ркирк┐ркжрк╛рки, рк░рлАркЕрк▓-ркЯрк╛ркЗрко ркмркЬрк╛рк░ ркнрк╛рк╡ ркЕркирлЗ рк╡рлНркпркХрлНркдрк┐ркЧркд ркЦрлЗркдрлА ркорк╛рк░рлНркЧркжрк░рлНрк╢рки рк╕рк╛ркерлЗ ркнрк╛рк░ркдрлАркп ркХрлГрк╖рк┐ркорк╛ркВ ркХрлНрк░рк╛ркВркдрк┐',
        pa: 'римрйБрй▒ризрйАриори╛рии рилри╕ри▓ риири┐рижри╛рии, ри░рйАриЕри▓-риЯри╛риИрио риори╛ри░риХрйАриЯ ри░рйЗриЯ риЕридрйЗ ри╡ри┐риЕриХридрйАриЧрид риЦрйЗридрйА риори╛ри░риЧрижри░ри╕ри╝рии риири╛ри▓ ринри╛ри░ридрйА риЦрйЗридрйА ри╡ри┐рй▒риЪ риХрйНри░ри╛риВридрйА'
      },
      launchApp: {
        en: 'Launch KISAN Assistant',
        hi: 'KISAN рд╕рд╣рд╛рдпрдХ рд╢реБрд░реВ рдХрд░реЗрдВ',
        mr: 'KISAN рд╕рд╣рд╛рдпрдХ рд╕реБрд░реВ рдХрд░рд╛',
        gu: 'KISAN рк╕рк╣рк╛ркпркХ рк╢рк░рлВ ркХрк░рлЛ',
        pa: 'KISAN ри╕ри╣ри╛риЗриХ ри╕ри╝рйБри░рйВ риХри░рйЛ'
      },
      watchDemo: {
        en: 'Watch Demo',
        hi: 'рдбреЗрдореЛ рджреЗрдЦреЗрдВ',
        mr: 'рдбреЗрдореЛ рдкрд╣рд╛',
        gu: 'ркбрлЗркорлЛ ркЬрлБркУ',
        pa: 'рибрйИриорйЛ рижрйЗриЦрйЛ'
      },
      features: {
        en: 'Powerful Features for Modern Farmers',
        hi: 'рдЖрдзреБрдирд┐рдХ рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЗ рд▓рд┐рдП рд╢рдХреНрддрд┐рд╢рд╛рд▓реА рд╕реБрд╡рд┐рдзрд╛рдПрдВ',
        mr: 'рдЖрдзреБрдирд┐рдХ рд╢реЗрддрдХрд▒реНрдпрд╛рдВрд╕рд╛рдареА рд╢рдХреНрддрд┐рд╢рд╛рд▓реА рд╡реИрд╢рд┐рд╖реНрдЯреНрдпреЗ',
        gu: 'ркЖркзрлБркирк┐ркХ ркЦрлЗркбрлВркдрлЛ ркорк╛ркЯрлЗ рк╢ркХрлНркдрк┐рк╢рк╛рк│рлА рк╕рлБрк╡рк┐ркзрк╛ркУ',
        pa: 'риЖризрйБриири┐риХ риХри┐ри╕ри╛риири╛риВ ри▓риИ ри╕ри╝риХридрйАри╕ри╝ри╛ри▓рйА ри╡ри┐ри╕ри╝рйЗри╕ри╝ридри╛ри╡ри╛риВ'
      },
      cropDiagnosis: {
        en: 'AI Crop Diagnosis',
        hi: 'AI рдлрд╕рд▓ рдирд┐рджрд╛рди',
        mr: 'AI рдкреАрдХ рдирд┐рджрд╛рди',
        gu: 'AI рккрк╛ркХ ркирк┐ркжрк╛рки',
        pa: 'AI рилри╕ри▓ риири┐рижри╛рии'
      },
      cropDiagnosisDesc: {
        en: 'Instantly identify diseases and pests using advanced AI image recognition',
        hi: 'рдЙрдиреНрдирдд AI рдЫрд╡рд┐ рдкрд╣рдЪрд╛рди рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рддреБрд░рдВрдд рд░реЛрдЧреЛрдВ рдФрд░ рдХреАрдЯреЛрдВ рдХреА рдкрд╣рдЪрд╛рди рдХрд░реЗрдВ',
        mr: 'рдкреНрд░рдЧрдд AI рдкреНрд░рддрд┐рдорд╛ рдУрд│рдЦреАрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░реВрди рддрддреНрдХрд╛рд│ рд░реЛрдЧ рдЖрдгрд┐ рдХреАрдЯрдХрд╛рдВрдЪреА рдУрд│рдЦ рдХрд░рд╛',
        gu: 'ркЕркжрлНркпркдрки AI ркЗркорлЗркЬ рк░рк┐ркХркЧрлНркирк┐рк╢ркиркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлАркирлЗ ркдрк╛ркдрлНркХрк╛рк▓рк┐ркХ рк░рлЛркЧрлЛ ркЕркирлЗ ркЬркВркдрлБркУркирлА ркУрк│ркЦ ркХрк░рлЛ',
        pa: 'риЙрй▒риирид AI риЪри┐рй▒ридри░ рикриЫри╛риг рижрйА ри╡ри░ридрйЛриВ риХри░риХрйЗ ридрйБри░рй░рид римри┐риори╛ри░рйАриЖриВ риЕридрйЗ риХрйАрйЬри┐риЖриВ рижрйА рикриЫри╛риг риХри░рйЛ'
      },
      marketPrices: {
        en: 'Real-time Market Prices',
        hi: 'рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рдмрд╛рдЬрд╛рд░ рдореВрд▓реНрдп',
        mr: 'рд░рд┐рдЕрд▓-рдЯрд╛рдЗрдо рдмрд╛рдЬрд╛рд░ рдХрд┐рдВрдорддреА',
        gu: 'рк░рлАркЕрк▓-ркЯрк╛ркЗрко ркмркЬрк╛рк░ ркнрк╛рк╡',
        pa: 'ри░рйАриЕри▓-риЯри╛риИрио риори╛ри░риХрйАриЯ ри░рйЗриЯ'
      },
      marketPricesDesc: {
        en: 'Get live market rates and price trends for better selling decisions',
        hi: 'рдмреЗрд╣рддрд░ рдмрд┐рдХреНрд░реА рдирд┐рд░реНрдгрдпреЛрдВ рдХреЗ рд▓рд┐рдП рд▓рд╛рдЗрд╡ рдмрд╛рдЬрд╛рд░ рджрд░реЗрдВ рдФрд░ рдореВрд▓реНрдп рд░реБрдЭрд╛рди рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ',
        mr: 'рдЪрд╛рдВрдЧрд▓реНрдпрд╛ рд╡рд┐рдХреНрд░реА рдирд┐рд░реНрдгрдпрд╛рдВрд╕рд╛рдареА рд▓рд╛рдЗрд╡реНрд╣ рдмрд╛рдЬрд╛рд░ рджрд░ рдЖрдгрд┐ рдХрд┐рдВрдордд рдЯреНрд░реЗрдВрдб рдорд┐рд│рд╡рд╛',
        gu: 'рк╡ркзрлБ рк╕рк╛рк░рк╛ рк╡рлЗркЪрк╛ркг ркирк┐рк░рлНркгркпрлЛ ркорк╛ркЯрлЗ рк▓рк╛ркЗрк╡ ркмркЬрк╛рк░ ркжрк░рлЛ ркЕркирлЗ ркнрк╛рк╡ рк╡рк▓ркгрлЛ ркорлЗрк│рк╡рлЛ',
        pa: 'римри┐ри╣ридри░ ри╡ри┐риХри░рйА рилрйИри╕ри▓ри┐риЖриВ ри▓риИ ри▓ри╛риИри╡ риори╛ри░риХрйАриЯ ри░рйЗриЯ риЕридрйЗ риХрйАриорид ри░рйБриЭри╛рии рикрйНри░ри╛рикрид риХри░рйЛ'
      },
      govSchemes: {
        en: 'Government Schemes',
        hi: 'рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛рдПрдВ',
        mr: 'рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛',
        gu: 'рк╕рк░ркХрк╛рк░рлА ркпрлЛркЬркирк╛ркУ',
        pa: 'ри╕ри░риХри╛ри░рйА рипрйЛриЬриири╛ри╡ри╛риВ'
      },
      govSchemesDesc: {
        en: 'Stay updated with latest subsidies and government benefits',
        hi: 'рдирд╡реАрдирддрдо рд╕рдмреНрд╕рд┐рдбреА рдФрд░ рд╕рд░рдХрд╛рд░реА рд▓рд╛рднреЛрдВ рдХреЗ рд╕рд╛рде рдЕрдкрдбреЗрдЯ рд░рд╣реЗрдВ',
        mr: 'рдирд╡реАрдирддрдо рд╕рдмрд╕рд┐рдбреА рдЖрдгрд┐ рд╕рд░рдХрд╛рд░реА рдлрд╛рдпрджреНрдпрд╛рдВрд╕рд╣ рдЕрдкрдбреЗрдЯ рд░рд╛рд╣рд╛',
        gu: 'ркирк╡рлАркиркдрко рк╕ркмрк╕рк┐ркбрлА ркЕркирлЗ рк╕рк░ркХрк╛рк░рлА рк▓рк╛ркнрлЛ рк╕рк╛ркерлЗ ркЕрккркбрлЗркЯ рк░рк╣рлЛ',
        pa: 'риири╡рйАрииридрио ри╕римри╕ри┐рибрйА риЕридрйЗ ри╕ри░риХри╛ри░рйА ри▓ри╛ринри╛риВ риири╛ри▓ риЕрикрибрйЗриЯ ри░ри╣рйЛ'
      },
      voiceAssistant: {
        en: 'Voice Assistant',
        hi: 'рд╡реЙрдЗрд╕ рдЕрд╕рд┐рд╕реНрдЯреЗрдВрдЯ',
        mr: 'рд╡реНрд╣реЙрдЗрд╕ рдЕрд╕рд┐рд╕реНрдЯрдВрдЯ',
        gu: 'рк╡рлЙркЗрк╕ ркЖрк╕рк┐рк╕рлНркЯркирлНркЯ',
        pa: 'ри╡рйМриЗри╕ риЕри╕ри┐ри╕риЯрйИриВриЯ'
      },
      voiceAssistantDesc: {
        en: 'Ask questions in your local language and get instant answers',
        hi: 'рдЕрдкрдиреА рд╕реНрдерд╛рдиреАрдп рднрд╛рд╖рд╛ рдореЗрдВ рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ рдФрд░ рддреБрд░рдВрдд рдЙрддреНрддрд░ рдкрд╛рдПрдВ',
        mr: 'рддреБрдордЪреНрдпрд╛ рд╕реНрдерд╛рдирд┐рдХ рднрд╛рд╖реЗрдд рдкреНрд░рд╢реНрди рд╡рд┐рдЪрд╛рд░рд╛ рдЖрдгрд┐ рддрддреНрдХрд╛рд│ рдЙрддреНрддрд░реЗ рдорд┐рд│рд╡рд╛',
        gu: 'ркдркорк╛рк░рлА рк╕рлНркерк╛ркирк┐ркХ ркнрк╛рк╖рк╛ркорк╛ркВ рккрлНрк░рк╢рлНркирлЛ рккрлВркЫрлЛ ркЕркирлЗ ркдрк╛ркдрлНркХрк╛рк▓рк┐ркХ ркЬрк╡рк╛ркмрлЛ ркорлЗрк│рк╡рлЛ',
        pa: 'риЖрикригрйА ри╕риери╛риириХ ринри╛ри╕ри╝ри╛ ри╡ри┐рй▒риЪ ри╕ри╡ри╛ри▓ рикрйБрй▒риЫрйЛ риЕридрйЗ ридрйБри░рй░рид риЬри╡ри╛рим рикри╛риУ'
      },
      trustedBy: {
        en: 'Trusted by Farmers Across India',
        hi: 'рдкреВрд░реЗ рднрд╛рд░рдд рдХреЗ рдХрд┐рд╕рд╛рдиреЛрдВ рджреНрд╡рд╛рд░рд╛ рднрд░реЛрд╕реЗрдордВрдж',
        mr: 'рд╕рдВрдкреВрд░реНрдг рднрд╛рд░рддрд╛рддреАрд▓ рд╢реЗрддрдХрд▒реНрдпрд╛рдВрдЪрд╛ рд╡рд┐рд╢реНрд╡рд╛рд╕',
        gu: 'рк╕ркоркЧрлНрк░ ркнрк╛рк░ркдркирк╛ ркЦрлЗркбрлВркдрлЛ ркжрлНрк╡рк╛рк░рк╛ рк╡рк┐рк╢рлНрк╡рк╕ркирлАркп',
        pa: 'рикрйВри░рйЗ ринри╛ри░рид рижрйЗ риХри┐ри╕ри╛риири╛риВ рижрйБриЖри░ри╛ ринри░рйЛри╕рйЗриорй░риж'
      },
      multiLanguage: {
        en: 'Multi-Language Support',
        hi: 'рдмрд╣реБ-рднрд╛рд╖рд╛ рд╕рдорд░реНрдерди',
        mr: 'рдмрд╣реБ-рднрд╛рд╖рд╛ рд╕рдорд░реНрдерди',
        gu: 'ркмрк╣рлБ-ркнрк╛рк╖рк╛ рк╕рккрлЛрк░рлНркЯ',
        pa: 'римри╣рйБ-ринри╛ри╕ри╝ри╛ ри╕ри╣ри╛риЗридри╛'
      },
      multiLanguageDesc: {
        en: 'Available in Hindi, Marathi, Gujarati, Punjabi and English',
        hi: 'рд╣рд┐рдВрджреА, рдорд░рд╛рдареА, рдЧреБрдЬрд░рд╛рддреА, рдкрдВрдЬрд╛рдмреА рдФрд░ рдЕрдВрдЧреНрд░реЗрдЬреА рдореЗрдВ рдЙрдкрд▓рдмреНрдз',
        mr: 'рд╣рд┐рдВрджреА, рдорд░рд╛рдареА, рдЧреБрдЬрд░рд╛рддреА, рдкрдВрдЬрд╛рдмреА рдЖрдгрд┐ рдЗрдВрдЧреНрд░рдЬреАрдордзреНрдпреЗ рдЙрдкрд▓рдмреНрдз',
        gu: 'рк╣рк┐ркирлНркжрлА, ркорк░рк╛ркарлА, ркЧрлБркЬрк░рк╛ркдрлА, рккркВркЬрк╛ркмрлА ркЕркирлЗ ркЕркВркЧрлНрк░рлЗркЬрлАркорк╛ркВ ркЙрккрк▓ркмрлНркз',
        pa: 'ри╣ри┐рй░рижрйА, риори░ри╛риарйА, риЧрйБриЬри░ри╛ридрйА, рикрй░риЬри╛римрйА риЕридрйЗ риЕрй░риЧри░рйЗриЬри╝рйА ри╡ри┐рй▒риЪ риЙрикри▓римриз'
      },
      smartTech: {
        en: 'Smart Technology',
        hi: 'рд╕реНрдорд╛рд░реНрдЯ рддрдХрдиреАрдХ',
        mr: 'рд╕реНрдорд╛рд░реНрдЯ рддрдВрддреНрд░рдЬреНрдЮрд╛рди',
        gu: 'рк╕рлНркорк╛рк░рлНркЯ ркЯрлЗркХркирлЛрк▓рлЛркЬрлА',
        pa: 'ри╕риори╛ри░риЯ ридриХриири╛ри▓рйЛриЬрйА'
      },
      smartTechDesc: {
        en: 'Powered by advanced AI and machine learning algorithms',
        hi: 'рдЙрдиреНрдирдд AI рдФрд░ рдорд╢реАрди рд▓рд░реНрдирд┐рдВрдЧ рдПрд▓реНрдЧреЛрд░рд┐рджрдо рджреНрд╡рд╛рд░рд╛ рд╕рдВрдЪрд╛рд▓рд┐рдд',
        mr: 'рдкреНрд░рдЧрдд AI рдЖрдгрд┐ рдорд╢реАрди рд▓рд░реНрдирд┐рдВрдЧ рдЕрд▓реНрдЧреЛрд░рд┐рджрдорджреНрд╡рд╛рд░реЗ рдЪрд╛рд▓рд┐рдд',
        gu: 'ркЕркжрлНркпркдрки AI ркЕркирлЗ ркорк╢рлАрки рк▓рк░рлНркирк┐ркВркЧ ркЕрк▓рлНркЧрлЛрк░рк┐ркзрко ркжрлНрк╡рк╛рк░рк╛ рк╕ркВркЪрк╛рк▓рк┐ркд',
        pa: 'риЙрй▒риирид AI риЕридрйЗ риори╕ри╝рйАрии ри▓ри░риири┐рй░риЧ риРри▓риЧрйЛри░ри┐рижрио рижрйБриЖри░ри╛ ри╕рй░риЪри╛ри▓ри┐рид'
      },
      weatherForecast: {
        en: 'Weather Forecast',
        hi: 'рдореМрд╕рдо рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди',
        mr: 'рд╣рд╡рд╛рдорд╛рди рдЕрдВрджрд╛рдЬ',
        gu: 'рк╣рк╡рк╛ркорк╛рки ркЖркЧрк╛рк╣рлА',
        pa: 'риорйМри╕рио рижрйА ринри╡ри┐рй▒риЦримри╛ригрйА'
      },
      weatherForecastDesc: {
        en: '7-day weather forecast with farming recommendations',
        hi: 'рдХреГрд╖рд┐ рд╕реБрдЭрд╛рд╡реЛрдВ рдХреЗ рд╕рд╛рде 7-рджрд┐рди рдХрд╛ рдореМрд╕рдо рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди',
        mr: 'рд╢реЗрддреА рд╢рд┐рдлрд╛рд░рд╕реАрдВрд╕рд╣ 7-рджрд┐рд╡рд╕реАрдп рд╣рд╡рд╛рдорд╛рди рдЕрдВрджрд╛рдЬ',
        gu: 'ркЦрлЗркдрлА ркнрк▓рк╛ркоркгрлЛ рк╕рк╛ркерлЗ 7-ркжрк┐рк╡рк╕рлАркп рк╣рк╡рк╛ркорк╛рки ркЖркЧрк╛рк╣рлА',
        pa: 'риЦрйЗридрйА ри╕ри┐рилри╛ри░ри╕ри╝ри╛риВ рижрйЗ риири╛ри▓ 7-рижри┐рии рижрйА риорйМри╕рио ринри╡ри┐рй▒риЦримри╛ригрйА'
      },
      cropRecommendations: {
        en: 'Crop Recommendations',
        hi: 'рдлрд╕рд▓ рд╕реБрдЭрд╛рд╡',
        mr: 'рдкреАрдХ рд╢рд┐рдлрд╛рд░рд╕реА',
        gu: 'рккрк╛ркХ ркнрк▓рк╛ркоркгрлЛ',
        pa: 'рилри╕ри▓ ри╕ри┐рилри╛ри░ри╕ри╝ри╛риВ'
      },
      cropRecommendationsDesc: {
        en: 'AI-powered crop suggestions based on soil and weather',
        hi: 'рдорд┐рдЯреНрдЯреА рдФрд░ рдореМрд╕рдо рдХреЗ рдЖрдзрд╛рд░ рдкрд░ AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдлрд╕рд▓ рд╕реБрдЭрд╛рд╡',
        mr: 'рдорд╛рддреА рдЖрдгрд┐ рд╣рд╡рд╛рдорд╛рдирд╛рд╡рд░ рдЖрдзрд╛рд░рд┐рдд AI-рдЪрд╛рд▓рд┐рдд рдкреАрдХ рд╕реВрдЪрдирд╛',
        gu: 'ркорк╛ркЯрлА ркЕркирлЗ рк╣рк╡рк╛ркорк╛рки рккрк░ ркЖркзрк╛рк░рк┐ркд AI-рк╕ркВркЪрк╛рк▓рк┐ркд рккрк╛ркХ рк╕рлВркЪркирк╛ркУ',
        pa: 'риори┐рй▒риЯрйА риЕридрйЗ риорйМри╕рио рижрйЗ риЖризри╛ри░ \'ридрйЗ AI-ри╕рй░риЪри╛ри▓ри┐рид рилри╕ри▓ ри╕рйБриЭри╛риЕ'
      },
      farmingTips: {
        en: 'Expert Farming Tips',
        hi: 'рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рдХреГрд╖рд┐ рд╕реБрдЭрд╛рд╡',
        mr: 'рддрдЬреНрдЮ рд╢реЗрддреА рдЯрд┐рдкреНрд╕',
        gu: 'ркирк┐рк╖рлНркгрк╛ркд ркЦрлЗркдрлА ркЯрк┐рккрлНрк╕',
        pa: 'риори╛ри╣ри░ риЦрйЗридрйА риЯри┐рй▒рикри╕'
      },
      farmingTipsDesc: {
        en: 'Seasonal tips and best practices from agricultural experts',
        hi: 'рдХреГрд╖рд┐ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮреЛрдВ рд╕реЗ рдореМрд╕рдореА рд╕реБрдЭрд╛рд╡ рдФрд░ рд╕рд░реНрд╡реЛрддреНрддрдо рдкреНрд░рдерд╛рдПрдВ',
        mr: 'рдХреГрд╖реА рддрдЬреНрдЮрд╛рдВрдХрдбреВрди рд╣рдВрдЧрд╛рдореА рдЯрд┐рдкреНрд╕ рдЖрдгрд┐ рд╕рд░реНрд╡реЛрддреНрддрдо рдкрджреНрдзрддреА',
        gu: 'ркХрлГрк╖рк┐ ркирк┐рк╖рлНркгрк╛ркдрлЛ рккрк╛рк╕рлЗркерлА ркорлЛрк╕ркорлА ркЯрк┐рккрлНрк╕ ркЕркирлЗ рк╢рлНрк░рлЗрк╖рлНрка рккрлНрк░ркерк╛ркУ',
        pa: 'риЦрйЗридрйА риори╛ри╣ри░ри╛риВ ридрйЛриВ риорйМри╕риорйА риЯри┐рй▒рикри╕ риЕридрйЗ ри╕рин ридрйЛриВ ри╡ризрйАриЖ риЕринри┐риЖри╕'
      },
      farmAnalytics: {
        en: 'Farm Analytics',
        hi: 'рдХреГрд╖рд┐ рд╡рд┐рд╢реНрд▓реЗрд╖рдг',
        mr: 'рд╢реЗрддреА рд╡рд┐рд╢реНрд▓реЗрд╖рдг',
        gu: 'ркЦрлЗркд рк╡рк┐рк╢рлНрк▓рлЗрк╖ркг',
        pa: 'риЦрйЗрид ри╡ри┐ри╕ри╝ри▓рйЗри╕ри╝риг'
      },
      farmAnalyticsDesc: {
        en: 'Track your farm performance and profitability insights',
        hi: 'рдЕрдкрдиреЗ рдЦреЗрдд рдХреЗ рдкреНрд░рджрд░реНрд╢рди рдФрд░ рд▓рд╛рднрдкреНрд░рджрддрд╛ рдХреА рдЬрд╛рдирдХрд╛рд░реА рдЯреНрд░реИрдХ рдХрд░реЗрдВ',
        mr: 'рддреБрдордЪреНрдпрд╛ рд╢реЗрддрд╛рдЪреА рдХрд╛рдордЧрд┐рд░реА рдЖрдгрд┐ рдирдлреНрдпрд╛рдЪреА рдорд╛рд╣рд┐рддреА рдЯреНрд░реЕрдХ рдХрд░рд╛',
        gu: 'ркдркорк╛рк░рк╛ ркЦрлЗркдрк░ркирлА ркХрк╛ркоркЧрлАрк░рлА ркЕркирлЗ ркирклрк╛ркХрк╛рк░ркХркдрк╛ркирлА ркорк╛рк╣рк┐ркдрлА ркЯрлНрк░рлЕркХ ркХрк░рлЛ',
        pa: 'риЖрикригрйЗ риЦрйЗрид рижрйА риХри╛ри░риЧрйБриЬри╝ри╛ри░рйА риЕридрйЗ риорйБриири╛рилрйЗ рижрйА риЬри╛ригриХри╛ри░рйА риирйВрй░ риЯри░рйИриХ риХри░рйЛ'
      },
      getStarted: {
        en: 'Ready to Transform Your Farming?',
        hi: 'рдЕрдкрдиреА рдЦреЗрддреА рдХреЛ рдмрджрд▓рдиреЗ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реИрдВ?',
        mr: 'рддреБрдордЪреА рд╢реЗрддреА рдмрджрд▓рдгреНрдпрд╛рд╕рд╛рдареА рддрдпрд╛рд░ рдЖрд╣рд╛рдд?',
        gu: 'ркдркорк╛рк░рлА ркЦрлЗркдрлАркирлЗ ркмркжрк▓рк╡рк╛ ркорк╛ркЯрлЗ ркдрлИркпрк╛рк░ ркЫрлЛ?',
        pa: 'риЖрикригрйА риЦрйЗридрйА риирйВрй░ римрижри▓риг ри▓риИ ридри┐риЖри░ ри╣рйЛ?'
      },
      getStartedDesc: {
        en: 'Join thousands of farmers who are already using KISAN to increase their productivity and profits',
        hi: 'рд╣рдЬрд╛рд░реЛрдВ рдХрд┐рд╕рд╛рдиреЛрдВ рд╕реЗ рдЬреБрдбрд╝реЗрдВ рдЬреЛ рдкрд╣рд▓реЗ рд╕реЗ рд╣реА рдЕрдкрдиреА рдЙрддреНрдкрд╛рджрдХрддрд╛ рдФрд░ рдореБрдирд╛рдлреЗ рдХреЛ рдмрдврд╝рд╛рдиреЗ рдХреЗ рд▓рд┐рдП KISAN рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░ рд░рд╣реЗ рд╣реИрдВ',
        mr: 'рд╣рдЬрд╛рд░реЛ рд╢реЗрддрдХрд▒реНрдпрд╛рдВрд╕реЛрдмрдд рд╕рд╛рдореАрд▓ рд╡реНрд╣рд╛ рдЬреЗ рдЖрдзреАрдЪ рддреНрдпрд╛рдВрдЪреА рдЙрддреНрдкрд╛рджрдХрддрд╛ рдЖрдгрд┐ рдирдлрд╛ рд╡рд╛рдврд╡рдгреНрдпрд╛рд╕рд╛рдареА KISAN рд╡рд╛рдкрд░рдд рдЖрд╣реЗрдд',
        gu: 'рк╣ркЬрк╛рк░рлЛ ркЦрлЗркбрлВркдрлЛ рк╕рк╛ркерлЗ ркЬрлЛркбрк╛ркУ ркЬрлЗркУ рккрк╣рлЗрк▓рлЗркерлА ркЬ ркдрлЗркоркирлА ркЙркдрлНрккрк╛ркжркХркдрк╛ ркЕркирлЗ ркирклрлЛ рк╡ркзрк╛рк░рк╡рк╛ ркорк╛ркЯрлЗ KISAN ркирлЛ ркЙрккркпрлЛркЧ ркХрк░рлА рк░рк╣рлНркпрк╛ ркЫрлЗ',
        pa: 'ри╣риЬри╝ри╛ри░ри╛риВ риХри┐ри╕ри╛риири╛риВ риири╛ри▓ риЬрйБрйЬрйЛ риЬрйЛ рикри╣ри┐ри▓ри╛риВ ридрйЛриВ ри╣рйА риЖрикригрйА риЙридрикри╛рижриХридри╛ риЕридрйЗ риорйБриири╛рилрйЗ риирйВрй░ ри╡ризри╛риЙриг ри▓риИ KISAN рижрйА ри╡ри░ридрйЛриВ риХри░ ри░ри╣рйЗ ри╣рии'
      }
    };
    return texts[key]?.[selectedLanguage] || texts[key]?.['en'] || '';
  };

  const features = [
    {
      icon: Camera,
      title: getLocalizedText('cropDiagnosis'),
      description: getLocalizedText('cropDiagnosisDesc'),
      color: 'green'
    },
    {
      icon: TrendingUp,
      title: getLocalizedText('marketPrices'),
      description: getLocalizedText('marketPricesDesc'),
      color: 'yellow'
    },
    {
      icon: FileText,
      title: getLocalizedText('govSchemes'),
      description: getLocalizedText('govSchemesDesc'),
      color: 'blue'
    },
    {
      icon: Mic,
      title: getLocalizedText('voiceAssistant'),
      description: getLocalizedText('voiceAssistantDesc'),
      color: 'purple'
    },
    {
      icon: Cloud,
      title: getLocalizedText('weatherForecast'),
      description: getLocalizedText('weatherForecastDesc'),
      color: 'indigo'
    },
    {
      icon: Sprout,
      title: getLocalizedText('cropRecommendations'),
      description: getLocalizedText('cropRecommendationsDesc'),
      color: 'emerald'
    },
    {
      icon: Lightbulb,
      title: getLocalizedText('farmingTips'),
      description: getLocalizedText('farmingTipsDesc'),
      color: 'orange'
    },
    {
      icon: BarChart3,
      title: getLocalizedText('farmAnalytics'),
      description: getLocalizedText('farmAnalyticsDesc'),
      color: 'violet'
    }
  ];

  const benefits = [
    {
      icon: Globe,
      title: getLocalizedText('multiLanguage'),
      description: getLocalizedText('multiLanguageDesc')
    },
    {
      icon: Brain,
      title: getLocalizedText('smartTech'),
      description: getLocalizedText('smartTechDesc')
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-white to-yellow-50">
      {/* Header */}
      <header className="bg-white/95 backdrop-blur-md shadow-sm border-b border-green-100 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-14 sm:h-16">
            <div className="flex items-center space-x-3">
              <div className="bg-gradient-to-r from-green-600 to-green-700 p-1.5 sm:p-2 rounded-lg sm:rounded-xl shadow-lg">
                <Leaf className="h-6 w-6 sm:h-8 sm:w-8 text-white" />
              </div>
              <div>
                <h1 className="text-lg sm:text-2xl font-bold bg-gradient-to-r from-green-700 to-green-600 bg-clip-text text-transparent">
                  Project KISAN
                </h1>
                <p className="text-xs text-green-600 font-medium hidden sm:block">AI Farming Assistant</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              <select 
                value={selectedLanguage}
                onChange={(e) => setSelectedLanguage(e.target.value)}
                className="appearance-none bg-green-50 border border-green-200 rounded-lg px-2 py-1 sm:px-3 sm:py-2 text-xs sm:text-sm focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent"
              >
                {languages.map((lang) => (
                  <option key={lang.code} value={lang.code}>
                    <span className="hidden sm:inline">{lang.flag} </span>{lang.name}
                  </option>
                ))}
              </select>
            </div>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="relative overflow-hidden py-20 lg:py-32">
        {/* Animated Background */}
        <div className="absolute inset-0">
          <div className="absolute inset-0 bg-gradient-to-br from-green-600/20 via-emerald-500/10 to-yellow-500/20"></div>
          <div className="absolute inset-0 bg-gradient-to-tr from-blue-600/5 via-transparent to-purple-600/5"></div>
          
          {/* Animated Gradient Orbs */}
          <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-gradient-to-r from-green-400/30 to-emerald-500/30 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute bottom-1/4 right-1/4 w-80 h-80 bg-gradient-to-r from-yellow-400/30 to-orange-500/30 rounded-full blur-3xl animate-pulse delay-1000"></div>
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-gradient-to-r from-blue-400/20 to-purple-500/20 rounded-full blur-3xl animate-pulse delay-500"></div>
        </div>
        
        {/* Floating Particles */}
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute top-20 left-10 w-2 h-2 bg-green-400 rounded-full animate-bounce opacity-60"></div>
          <div className="absolute top-40 right-20 w-3 h-3 bg-yellow-400 rounded-full animate-bounce delay-300 opacity-60"></div>
          <div className="absolute bottom-40 left-20 w-2 h-2 bg-blue-400 rounded-full animate-bounce delay-700 opacity-60"></div>
          <div className="absolute bottom-20 right-40 w-3 h-3 bg-purple-400 rounded-full animate-bounce delay-1000 opacity-60"></div>
          <div className="absolute top-60 left-1/3 w-1 h-1 bg-emerald-400 rounded-full animate-ping opacity-40"></div>
          <div className="absolute bottom-60 right-1/3 w-1 h-1 bg-orange-400 rounded-full animate-ping delay-500 opacity-40"></div>
        </div>
        
        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center pt-8 sm:pt-12">
            {/* Animated Badge */}
            <div className="inline-flex items-center px-6 py-3 rounded-full bg-gradient-to-r from-green-100 to-yellow-100 border border-green-200 mb-8 animate-fade-in">
              <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse mr-3"></div>
              <span className="text-green-700 font-medium text-sm">
                {selectedLanguage === 'en' ? 'ЁЯЪА Now Available in 5+ Indian Languages' : 'ЁЯЪА рдЕрдм 5+ рднрд╛рд░рддреАрдп рднрд╛рд╖рд╛рдУрдВ рдореЗрдВ рдЙрдкрд▓рдмреНрдз'}
              </span>
            </div>
            
            <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-black text-gray-900 mb-6 leading-tight">
              <span className="bg-gradient-to-r from-green-600 via-emerald-600 to-green-700 bg-clip-text text-transparent drop-shadow-sm">
                Project KISAN
              </span>
              <br />
              <span className="text-lg sm:text-xl md:text-2xl lg:text-3xl bg-gradient-to-r from-gray-700 via-gray-800 to-gray-900 bg-clip-text text-transparent font-bold">
                {getLocalizedText('heroTitle')}
              </span>
            </h1>
            
            <p className="text-base sm:text-lg md:text-xl text-gray-600 mb-8 max-w-3xl mx-auto leading-relaxed">
              {getLocalizedText('heroSubtitle')}
            </p>
            
            {/* Enhanced CTA Buttons */}
            <div className="flex flex-col sm:flex-row gap-4 sm:gap-6 justify-center items-center mb-8">
              <button
                onClick={onLaunchApp}
                className="group relative bg-gradient-to-r from-green-600 via-green-700 to-emerald-700 text-white px-6 sm:px-8 py-3 sm:py-4 rounded-2xl text-base sm:text-lg font-bold shadow-xl hover:shadow-2xl transform hover:scale-105 transition-all duration-300 flex items-center space-x-3 overflow-hidden"
              >
                {/* Button Shine Effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -skew-x-12 transform translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-1000"></div>
                <div className="relative flex items-center space-x-3">
                  <div className="w-3 h-3 bg-white rounded-full animate-pulse"></div>
                  <span>{getLocalizedText('launchApp')}</span>
                  <ChevronRight className="h-5 w-5 group-hover:translate-x-2 transition-transform duration-300" />
                </div>
              </button>
              
              <button className="group relative bg-white/90 backdrop-blur-sm text-green-700 px-6 sm:px-8 py-3 sm:py-4 rounded-2xl text-base sm:text-lg font-bold shadow-lg hover:shadow-xl border-2 border-green-200 hover:border-green-300 transition-all duration-300 flex items-center space-x-3 overflow-hidden">
                {/* Button Glow Effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-green-50 to-yellow-50 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <div className="relative flex items-center space-x-3">
                  <div className="w-8 h-8 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                    <Play className="h-4 w-4 text-white ml-1" />
                  </div>
                <span>{getLocalizedText('watchDemo')}</span>
                </div>
              </button>
            </div>
          </div>
        </div>
        
        {/* Enhanced Floating Elements */}
        <div className="absolute top-32 left-10 animate-bounce delay-300 hidden lg:block">
          <div className="bg-gradient-to-r from-green-100 to-emerald-100 p-6 rounded-2xl shadow-2xl border border-green-200 backdrop-blur-sm">
            <Leaf className="h-10 w-10 text-green-600" />
          </div>
        </div>
        <div className="absolute top-40 right-16 animate-pulse delay-700 hidden lg:block">
          <div className="bg-gradient-to-r from-yellow-100 to-orange-100 p-6 rounded-2xl shadow-2xl border border-yellow-200 backdrop-blur-sm">
            <TrendingUp className="h-10 w-10 text-yellow-600" />
          </div>
        </div>
        <div className="absolute bottom-32 left-20 animate-bounce delay-1000 hidden lg:block">
          <div className="bg-gradient-to-r from-blue-100 to-indigo-100 p-6 rounded-2xl shadow-2xl border border-blue-200 backdrop-blur-sm">
            <Brain className="h-10 w-10 text-blue-600" />
          </div>
        </div>
        <div className="absolute top-1/2 right-10 animate-bounce delay-500 hidden lg:block">
          <div className="bg-gradient-to-r from-purple-100 to-pink-100 p-6 rounded-2xl shadow-2xl border border-purple-200 backdrop-blur-sm">
            <Smartphone className="h-10 w-10 text-purple-600" />
          </div>
        </div>
      </section>

      {/* App Download Section */}
      <section className="py-16 sm:py-20 bg-gradient-to-r from-green-600 to-emerald-700 text-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="mb-8">
            <div className="inline-flex items-center px-6 py-3 rounded-full bg-white/20 backdrop-blur-sm border border-white/30 mb-6">
              <Smartphone className="h-5 w-5 mr-3" />
              <span className="font-medium">
                {selectedLanguage === 'en' ? 'Download Our Mobile App' : 'рд╣рдорд╛рд░рд╛ рдореЛрдмрд╛рдЗрд▓ рдРрдк рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ'}
              </span>
            </div>
            
            <h2 className="text-3xl sm:text-4xl md:text-5xl font-bold mb-6">
              {selectedLanguage === 'en' ? 'Project KISAN App' : 'Project KISAN рдРрдк'}
            </h2>
            <p className="text-lg sm:text-xl md:text-2xl mb-8 max-w-3xl mx-auto opacity-90">
              {selectedLanguage === 'en' 
                ? 'Get the full farming experience on your mobile device. Available for Android and iOS.'
                : 'рдЕрдкрдиреЗ рдореЛрдмрд╛рдЗрд▓ рдбрд┐рд╡рд╛рдЗрд╕ рдкрд░ рдкреВрд░рд╛ рдХреГрд╖рд┐ рдЕрдиреБрднрд╡ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред Android рдФрд░ iOS рдХреЗ рд▓рд┐рдП рдЙрдкрд▓рдмреНрдзред'
              }
            </p>
          </div>
          
          {/* Download Buttons */}
          <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-12">
            <button className="group bg-black text-white px-8 py-4 rounded-2xl font-bold shadow-xl hover:shadow-2xl transform hover:scale-105 transition-all duration-300 flex items-center space-x-4 min-w-[200px]">
              <div className="bg-white p-2 rounded-lg">
                <Smartphone className="h-6 w-6 text-black" />
              </div>
              <div className="text-left">
                <div className="text-xs opacity-80">
                  {selectedLanguage === 'en' ? 'Download on the' : 'рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ'}
                </div>
                <div className="text-lg font-bold">Google Play</div>
              </div>
            </button>
            
            <button className="group bg-black text-white px-8 py-4 rounded-2xl font-bold shadow-xl hover:shadow-2xl transform hover:scale-105 transition-all duration-300 flex items-center space-x-4 min-w-[200px]">
              <div className="bg-white p-2 rounded-lg">
                <Smartphone className="h-6 w-6 text-black" />
              </div>
              <div className="text-left">
                <div className="text-xs opacity-80">
                  {selectedLanguage === 'en' ? 'Download on the' : 'рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ'}
                </div>
                <div className="text-lg font-bold">App Store</div>
              </div>
            </button>
          </div>
          
          {/* App Features */}
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-6 max-w-4xl mx-auto">
            <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
              <Camera className="h-8 w-8 mx-auto mb-4" />
              <h3 className="font-bold mb-2">
                {selectedLanguage === 'en' ? 'Instant Diagnosis' : 'рддреБрд░рдВрдд рдирд┐рджрд╛рди'}
              </h3>
              <p className="text-sm opacity-90">
                {selectedLanguage === 'en' 
                  ? 'Take photos and get instant crop disease diagnosis'
                  : 'рддрд╕реНрд╡реАрд░ рд▓реЗрдВ рдФрд░ рддреБрд░рдВрдд рдлрд╕рд▓ рд░реЛрдЧ рдирд┐рджрд╛рди рдкрд╛рдПрдВ'
                }
              </p>
            </div>
            
            <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
              <TrendingUp className="h-8 w-8 mx-auto mb-4" />
              <h3 className="font-bold mb-2">
                {selectedLanguage === 'en' ? 'Live Market Prices' : 'рд▓рд╛рдЗрд╡ рдмрд╛рдЬрд╛рд░ рднрд╛рд╡'}
              </h3>
              <p className="text-sm opacity-90">
                {selectedLanguage === 'en' 
                  ? 'Get real-time market prices and trends'
                  : 'рд░реАрдпрд▓-рдЯрд╛рдЗрдо рдмрд╛рдЬрд╛рд░ рднрд╛рд╡ рдФрд░ рд░реБрдЭрд╛рди рдкрд╛рдПрдВ'
                }
              </p>
            </div>
            
            <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
              <Mic className="h-8 w-8 mx-auto mb-4" />
              <h3 className="font-bold mb-2">
                {selectedLanguage === 'en' ? 'Voice Assistant' : 'рд╡реЙрдЗрд╕ рдЕрд╕рд┐рд╕реНрдЯреЗрдВрдЯ'}
              </h3>
              <p className="text-sm opacity-90">
                {selectedLanguage === 'en' 
                  ? 'Ask questions in your local language'
                  : 'рдЕрдкрдиреА рд╕реНрдерд╛рдиреАрдп рднрд╛рд╖рд╛ рдореЗрдВ рд╕рд╡рд╛рд▓ рдкреВрдЫреЗрдВ'
                }
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
              {getLocalizedText('features')}
            </h2>
            <div className="w-24 h-1 bg-gradient-to-r from-green-600 to-yellow-600 mx-auto rounded-full"></div>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {features.map((feature, index) => {
              const Icon = feature.icon;
              return (
                <div
                  key={index}
                  className="group bg-gradient-to-br from-white to-gray-50 p-8 rounded-3xl shadow-lg hover:shadow-2xl transform hover:scale-105 transition-all duration-300 border border-gray-100"
                >
                  <div className={`bg-gradient-to-r from-${feature.color}-500 to-${feature.color}-600 p-4 rounded-2xl w-fit mb-6 group-hover:scale-110 transition-transform duration-300`}>
                    <Icon className="h-8 w-8 text-white" />
                  </div>
                  <h3 className="text-xl font-bold text-gray-900 mb-4">{feature.title}</h3>
                  <p className="text-gray-600 leading-relaxed">{feature.description}</p>
                </div>
              );
            })}
          </div>
        </div>
      </section>

      {/* Benefits Section */}
      <section className="py-20 bg-gradient-to-r from-green-50 to-yellow-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
              {getLocalizedText('trustedBy')}
            </h2>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
            {benefits.map((benefit, index) => {
              const Icon = benefit.icon;
              return (
                <div
                  key={index}
                  className="flex items-start space-x-6 bg-white p-8 rounded-3xl shadow-lg hover:shadow-xl transition-shadow duration-300"
                >
                  <div className="bg-gradient-to-r from-green-500 to-green-600 p-4 rounded-2xl flex-shrink-0">
                    <Icon className="h-8 w-8 text-white" />
                  </div>
                  <div>
                    <h3 className="text-2xl font-bold text-gray-900 mb-3">{benefit.title}</h3>
                    <p className="text-gray-600 text-lg leading-relaxed">{benefit.description}</p>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
            <div className="bg-gradient-to-br from-green-50 to-green-100 p-8 rounded-3xl">
              <div className="text-4xl font-bold text-green-600 mb-2">50K+</div>
              <div className="text-gray-700 font-medium">
                {selectedLanguage === 'en' ? 'Active Farmers' : 'рд╕рдХреНрд░рд┐рдп рдХрд┐рд╕рд╛рди'}
              </div>
            </div>
            <div className="bg-gradient-to-br from-yellow-50 to-yellow-100 p-8 rounded-3xl">
              <div className="text-4xl font-bold text-yellow-600 mb-2">95%</div>
              <div className="text-gray-700 font-medium">
                {selectedLanguage === 'en' ? 'Accuracy Rate' : 'рд╕рдЯреАрдХрддрд╛ рджрд░'}
              </div>
            </div>
            <div className="bg-gradient-to-br from-blue-50 to-blue-100 p-8 rounded-3xl">
              <div className="text-4xl font-bold text-blue-600 mb-2">24/7</div>
              <div className="text-gray-700 font-medium">
                {selectedLanguage === 'en' ? 'Support Available' : 'рд╕рд╣рд╛рдпрддрд╛ рдЙрдкрд▓рдмреНрдз'}
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-r from-green-600 to-green-700 text-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-4xl md:text-5xl font-bold mb-6">
            {getLocalizedText('getStarted')}
          </h2>
          <p className="text-xl md:text-2xl mb-12 max-w-3xl mx-auto opacity-90">
            {getLocalizedText('getStartedDesc')}
          </p>
          
          <button
            onClick={onLaunchApp}
            className="group bg-white text-green-700 px-12 py-6 rounded-2xl text-xl font-bold shadow-2xl hover:shadow-3xl transform hover:scale-105 transition-all duration-300 flex items-center space-x-4 mx-auto"
          >
            <span>{getLocalizedText('launchApp')}</span>
            <ChevronRight className="h-6 w-6 group-hover:translate-x-2 transition-transform" />
          </button>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="flex items-center justify-center space-x-3 mb-6">
            <div className="bg-gradient-to-r from-green-600 to-green-700 p-2 rounded-xl">
              <Leaf className="h-6 w-6 text-white" />
            </div>
            <span className="text-2xl font-bold">Project KISAN</span>
          </div>
          
          {/* Team Axon Credit */}
          <div className="mb-6">
            <p className="text-lg font-semibold text-green-400 mb-2">
              {selectedLanguage === 'en' ? 'Developed by Team Axon' : 'Team Axon рджреНрд╡рд╛рд░рд╛ рд╡рд┐рдХрд╕рд┐рдд'}
            </p>
            <p className="text-gray-400 text-sm">
              {selectedLanguage === 'en' 
                ? 'Innovative solutions for modern agriculture'
                : 'рдЖрдзреБрдирд┐рдХ рдХреГрд╖рд┐ рдХреЗ рд▓рд┐рдП рдирд╡рд╛рдЪрд╛рд░ рд╕рдорд╛рдзрд╛рди'
              }
            </p>
          </div>
          
          <p className="text-gray-400 mb-4">
            {selectedLanguage === 'en' 
              ? '┬й 2024 Project KISAN - Empowering Indian Farmers with AI Technology'
              : '┬й 2024 Project KISAN - AI рддрдХрдиреАрдХ рдХреЗ рд╕рд╛рде рднрд╛рд░рддреАрдп рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЛ рд╕рд╢рдХреНрдд рдмрдирд╛рдирд╛'
            }
          </p>
          <p className="text-gray-500 text-sm">
            {selectedLanguage === 'en'
              ? 'Available in all major Indian languages тАв Designed for Indian farmers'
              : 'рд╕рднреА рдкреНрд░рдореБрдЦ рднрд╛рд░рддреАрдп рднрд╛рд╖рд╛рдУрдВ рдореЗрдВ рдЙрдкрд▓рдмреНрдз тАв рднрд╛рд░рддреАрдп рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЗ рд▓рд┐рдП рдбрд┐рдЬрд╝рд╛рдЗрди рдХрд┐рдпрд╛ рдЧрдпрд╛'
            }
          </p>
        </div>
      </footer>
    </div>
  );
};

export default LandingPage;